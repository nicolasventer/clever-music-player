import{x as g,y as U,z as P,U as o,S as w,a as u,C as k,b as p,m as q,v as _,d as f,l as m,c as x,I as T,F as V,B as Q,D as b,u as J,G as X,H as Y,T as Z}from"./index.js";const D=x("music-metadata:parser:MP4:atom");class z extends q("MP4"){}const A={len:8,get:(i,e)=>{const t=o.get(i,e);if(t<0)throw new z("Invalid atom header length");return{length:BigInt(t),name:new w(4,"latin1").get(i,e+4)}},put:(i,e,t)=>(o.put(i,e,Number(t.length)),V.put(i,e+4,t.name))},K=_,F={len:4,get:(i,e)=>({type:new w(4,"ascii").get(i,e)})};class W{constructor(e,t,a){if(e<t)throw new z(`Atom ${a} expected to be ${t}, but specifies ${e} bytes long.`);e>t&&D(`Warning: atom ${a} expected to be ${t}, but was actually ${e} bytes long.`),this.len=e}}const C={len:4,get:(i,e)=>{const t=o.get(i,e)-2082844800;return new Date(t*1e3)}};class ee extends W{constructor(e){super(e,24,"mdhd")}get(e,t){return{version:p.get(e,t+0),flags:k.get(e,t+1),creationTime:C.get(e,t+4),modificationTime:C.get(e,t+8),timeScale:o.get(e,t+12),duration:o.get(e,t+16),language:u.get(e,t+20),quality:u.get(e,t+22)}}}class te extends W{constructor(e){super(e,100,"mvhd")}get(e,t){return{version:p.get(e,t),flags:k.get(e,t+1),creationTime:C.get(e,t+4),modificationTime:C.get(e,t+8),timeScale:o.get(e,t+12),duration:o.get(e,t+16),preferredRate:o.get(e,t+20),preferredVolume:u.get(e,t+24),previewTime:o.get(e,t+72),previewDuration:o.get(e,t+76),posterTime:o.get(e,t+80),selectionTime:o.get(e,t+84),selectionDuration:o.get(e,t+88),currentTime:o.get(e,t+92),nextTrackID:o.get(e,t+96)}}}class ae{constructor(e){this.len=e}get(e,t){return{type:{set:p.get(e,t+0),type:k.get(e,t+1)},locale:k.get(e,t+4),value:new f(this.len-8).get(e,t+8)}}}class se{constructor(e){this.len=e}get(e,t){return{version:p.get(e,t),flags:k.get(e,t+1),name:new w(this.len-4,"utf-8").get(e,t+4)}}}class ne{constructor(e){this.len=e}get(e,t){return{version:p.get(e,t),flags:k.get(e,t+1),creationTime:C.get(e,t+4),modificationTime:C.get(e,t+8),trackId:o.get(e,t+12),duration:o.get(e,t+20),layer:u.get(e,t+24),alternateGroup:u.get(e,t+26),volume:u.get(e,t+28)}}}const O={len:8,get:(i,e)=>({version:p.get(i,e),flags:k.get(i,e+1),numberOfEntries:o.get(i,e+4)})};class re{constructor(e){this.len=e}get(e,t){const a=this.len-12;return{dataFormat:V.get(e,t),dataReferenceIndex:u.get(e,t+10),description:a>0?new f(a).get(e,t+12):void 0}}}class E{constructor(e){this.len=e}get(e,t){const a=O.get(e,t);t+=O.len;const s=[];for(let n=0;n<a.numberOfEntries;++n){const r=o.get(e,t);t+=o.len,s.push(new re(r-o.len).get(e,t)),t+=r}return{header:a,table:s}}}const B={len:8,get(i,e){return{version:T.get(i,e),revision:T.get(i,e+2),vendor:g.get(i,e+4)}}},ie={len:12,get(i,e){return{numAudioChannels:T.get(i,e+0),sampleSize:T.get(i,e+2),compressionId:T.get(i,e+4),packetSize:T.get(i,e+6),sampleRate:u.get(i,e+8)+u.get(i,e+10)/1e4}}};class ${constructor(e,t){this.len=e,this.token=t}get(e,t){const a=g.get(e,t+4);return{version:P.get(e,t+0),flags:U.get(e,t+1),numberOfEntries:a,entries:H(e,this.token,t+8,this.len-8,a)}}}const oe={len:8,get(i,e){return{count:g.get(i,e+0),duration:g.get(i,e+4)}}};class ce extends ${constructor(e){super(e,oe)}}const de={len:12,get(i,e){return{firstChunk:g.get(i,e),samplesPerChunk:g.get(i,e+4),sampleDescriptionId:g.get(i,e+8)}}};class le extends ${constructor(e){super(e,de)}}class L{constructor(e){this.len=e}get(e,t){const a=g.get(e,t+8);return{version:P.get(e,t),flags:U.get(e,t+1),sampleSize:g.get(e,t+4),numberOfEntries:a,entries:H(e,g,t+12,this.len-12,a)}}}class he extends ${constructor(e){super(e,g),this.len=e}}class me{constructor(e){this.len=e}get(e,t){const a=T.get(e,t+0);return new w(a,"utf-8").get(e,t+2)}}function H(i,e,t,a,s){if(D(`remainingLen=${a}, numberOfEntries=${s} * token-len=${e.len}`),a===0)return[];if(a!==s*e.len)throw new z("mismatch number-of-entries with remaining atom-length");const n=[];for(let r=0;r<s;++r)n.push(e.get(i,t)),t+=e.len;return n}class ge{constructor(e){this.len=e}get(e,t){const a=t+1,s={version:P.get(e,t),flags:{baseDataOffsetPresent:m(e,a+2,0),sampleDescriptionIndexPresent:m(e,a+2,1),defaultSampleDurationPresent:m(e,a+2,3),defaultSampleSizePresent:m(e,a+2,4),defaultSampleFlagsPresent:m(e,a+2,5),defaultDurationIsEmpty:m(e,a,0),defaultBaseIsMoof:m(e,a,1)},trackId:o.get(e,4)};let n=8;return s.flags.baseDataOffsetPresent&&(s.baseDataOffset=_.get(e,n),n+=8),s.flags.sampleDescriptionIndexPresent&&(s.sampleDescriptionIndex=o.get(e,n),n+=4),s.flags.defaultSampleDurationPresent&&(s.defaultSampleDuration=o.get(e,n),n+=4),s.flags.defaultSampleSizePresent&&(s.defaultSampleSize=o.get(e,n),n+=4),s.flags.defaultSampleFlagsPresent&&(s.defaultSampleFlags=o.get(e,n)),s}}class pe{constructor(e){this.len=e}get(e,t){const a=t+1,s={version:P.get(e,t),flags:{dataOffsetPresent:m(e,a+2,0),firstSampleFlagsPresent:m(e,a+2,2),sampleDurationPresent:m(e,a+1,0),sampleSizePresent:m(e,a+1,1),sampleFlagsPresent:m(e,a+1,2),sampleCompositionTimeOffsetsPresent:m(e,a+1,3)},sampleCount:o.get(e,t+4),samples:[]};let n=t+8;s.flags.dataOffsetPresent&&(s.dataOffset=o.get(e,n),n+=4),s.flags.firstSampleFlagsPresent&&(s.firstSampleFlags=o.get(e,n),n+=4);for(let r=0;r<s.sampleCount;++r){if(n>=this.len){D("TrackRunBox size mismatch");break}const c={};s.flags.sampleDurationPresent&&(c.sampleDuration=o.get(e,n),n+=4),s.flags.sampleSizePresent&&(c.sampleSize=o.get(e,n),n+=4),s.flags.sampleFlagsPresent&&(c.sampleFlags=o.get(e,n),n+=4),s.flags.sampleCompositionTimeOffsetsPresent&&(c.sampleCompositionTimeOffset=o.get(e,n),n+=4),s.samples.push(c)}return s}}class ue{constructor(e){this.len=e}get(e,t){const a=new w(4,"utf-8");return{version:P.get(e,t),flags:k.get(e,t+1),componentType:a.get(e,t+4),handlerType:a.get(e,t+8),componentName:new w(this.len-28,"utf-8").get(e,t+28)}}}class ke{constructor(e){this.len=e}get(e,t){let a=0;const s=[];for(;a<this.len;)s.push(o.get(e,t+a)),a+=4;return s}}const M=x("music-metadata:parser:MP4:Atom");class v{static async readAtom(e,t,a,s){const n=e.position;M(`Reading next token on offset=${n}...`);const r=await e.readToken(A),c=r.length===1n;c&&(r.length=await e.readToken(K));const d=new v(r,c,a),l=d.getPayloadLength(s);return M(`parse atom name=${d.atomPath}, extended=${d.extended}, offset=${n}, len=${d.header.length}`),await d.readData(e,t,l),d}constructor(e,t,a){this.header=e,this.extended=t,this.parent=a,this.children=[],this.atomPath=(this.parent?`${this.parent.atomPath}.`:"")+this.header.name}getHeaderLength(){return this.extended?16:8}getPayloadLength(e){return(this.header.length===0n?e:Number(this.header.length))-this.getHeaderLength()}async readAtoms(e,t,a){for(;a>0;){const s=await v.readAtom(e,t,this,a);this.children.push(s),a-=s.header.length===0n?a:Number(s.header.length)}}async readData(e,t,a){switch(this.header.name){case"moov":case"udta":case"mdia":case"minf":case"stbl":case"<id>":case"ilst":case"tref":case"moof":return this.readAtoms(e,t,this.getPayloadLength(a));case"meta":{const n=(await e.peekToken(A)).name==="hdlr"?0:4;return await e.ignore(n),this.readAtoms(e,t,this.getPayloadLength(a)-n)}default:return t(this,a)}}}const h=x("music-metadata:parser:MP4"),Te="iTunes",N={raw:{lossy:!1,format:"raw"},MAC3:{lossy:!0,format:"MACE 3:1"},MAC6:{lossy:!0,format:"MACE 6:1"},ima4:{lossy:!0,format:"IMA 4:1"},ulaw:{lossy:!0,format:"uLaw 2:1"},alaw:{lossy:!0,format:"uLaw 2:1"},Qclp:{lossy:!0,format:"QUALCOMM PureVoice"},".mp3":{lossy:!0,format:"MPEG-1 layer 3"},alac:{lossy:!1,format:"ALAC"},"ac-3":{lossy:!0,format:"AC-3"},mp4a:{lossy:!0,format:"MPEG-4/AAC"},mp4s:{lossy:!0,format:"MP4S"},c608:{lossy:!0,format:"CEA-608"},c708:{lossy:!0,format:"CEA-708"}};function R(i,e,t){return t.indexOf(i)===e}class I extends Q{constructor(){super(...arguments),this.tracks=new Map,this.hasVideoTrack=!1,this.hasAudioTrack=!0,this.atomParsers={mvhd:async e=>{const t=await this.tokenizer.readToken(new te(e));this.metadata.setFormat("creationTime",t.creationTime),this.metadata.setFormat("modificationTime",t.modificationTime)},chap:async e=>{const t=this.getTrackDescription(),a=[];for(;e>=o.len;)a.push(await this.tokenizer.readNumber(o)),e-=o.len;t.chapterList=a},mdat:async e=>{if(this.audioLengthInBytes=e,this.calculateBitRate(),this.options.includeChapters){const t=[...this.tracks.values()].filter(a=>a.chapterList);if(t.length===1){const a=t[0].chapterList,s=[...this.tracks.values()].filter(n=>a.indexOf(n.header.trackId)!==-1);if(s.length===1)return this.parseChapterTrack(s[0],t[0],e)}}await this.tokenizer.ignore(e)},ftyp:async e=>{const t=[];for(;e>0;){const s=await this.tokenizer.readToken(F);e-=F.len;const n=s.type.replace(/\W/g,"");n.length>0&&t.push(n)}h(`ftyp: ${t.join("/")}`);const a=t.filter(R).join("/");this.metadata.setFormat("container",a)},stsd:async e=>{const t=await this.tokenizer.readToken(new E(e)),a=this.getTrackDescription();a.soundSampleDescription=t.table.map(s=>this.parseSoundSampleDescription(s))},stsz:async e=>{const t=await this.tokenizer.readToken(new L(e)),a=this.getTrackDescription();a.sampleSize=t.sampleSize,a.sampleSizeTable=t.entries},date:async e=>{const t=await this.tokenizer.readToken(new w(e,"utf-8"));await this.addTag("date",t)}}}static read_BE_Integer(e,t){const a=(t?"INT":"UINT")+e.length*8+(e.length>1?"_BE":""),s=b[a];if(!s)throw new z(`Token for integer type not found: "${a}"`);return Number(s.get(e,0))}async parse(){this.hasVideoTrack=!1,this.hasAudioTrack=!0,this.tracks.clear();let e=this.tokenizer.fileInfo.size||0;for(;!this.tokenizer.fileInfo.size||e>0;){try{if((await this.tokenizer.peekToken(A)).name==="\0\0\0\0"){const r=`Error at offset=${this.tokenizer.position}: box.id=0`;h(r),this.addWarning(r);break}}catch(n){if(n instanceof Error){const r=`Error at offset=${this.tokenizer.position}: ${n.message}`;h(r),this.addWarning(r)}else throw n;break}const s=await v.readAtom(this.tokenizer,(n,r)=>this.handleAtom(n,r),null,e);e-=s.header.length===BigInt(0)?e:Number(s.header.length)}const t=[];this.tracks.forEach(s=>{const n=[];s.soundSampleDescription.forEach(r=>{const c={},d=N[r.dataFormat];if(d?(n.push(d.format),c.codecName=d.format):c.codecName=`<${r.dataFormat}>`,r.description){const{description:l}=r;l.sampleRate>0&&(c.type=Z.audio,c.audio={samplingFrequency:l.sampleRate,bitDepth:l.sampleSize,channels:l.numAudioChannels})}this.metadata.addStreamInfo(c)}),n.length>=1&&t.push(n.join("/"))}),t.length>0&&this.metadata.setFormat("codec",t.filter(R).join("+"));const a=[...this.tracks.values()].filter(s=>s.soundSampleDescription.length>=1&&s.soundSampleDescription[0].description&&s.soundSampleDescription[0].description.numAudioChannels>0);if(a.length>=1){const s=a[0];if(s.media.header&&s.media.header.timeScale>0){if(s.media.header.duration>0){h("Using duration defined on audio track");const c=s.media.header.duration/s.media.header.timeScale;this.metadata.setFormat("duration",c)}else if(s.fragments.length>0){h("Calculate duration defined in track fragments");let c=0;for(const d of s.fragments){const l=d.header.defaultSampleDuration;for(const S of d.trackRun.samples){const y=S.sampleDuration??l;if(y==null)throw new Error("Missing sampleDuration and no default_sample_duration in tfhd");c+=y}}this.metadata.setFormat("duration",c/s.media.header.timeScale)}}const n=s.soundSampleDescription[0];if(n.description&&s.media.header&&(this.metadata.setFormat("sampleRate",n.description.sampleRate),this.metadata.setFormat("bitsPerSample",n.description.sampleSize),this.metadata.setFormat("numberOfChannels",n.description.numAudioChannels),s.media.header.timeScale===0&&s.timeToSampleTable.length>0)){const d=s.timeToSampleTable.map(l=>l.count*l.duration).reduce((l,S)=>l+S)/n.description.sampleRate;this.metadata.setFormat("duration",d)}const r=N[n.dataFormat];r&&this.metadata.setFormat("lossless",!r.lossy),this.calculateBitRate()}this.metadata.setFormat("hasAudio",this.hasAudioTrack),this.metadata.setFormat("hasVideo",this.hasVideoTrack)}async handleAtom(e,t){if(e.parent)switch(e.parent.header.name){case"ilst":case"<id>":return this.parseMetadataItemData(e);case"moov":switch(e.header.name){case"trak":return this.parseTrackBox(e)}break;case"moof":switch(e.header.name){case"traf":return this.parseTrackFragmentBox(e)}}if(this.atomParsers[e.header.name])return this.atomParsers[e.header.name](t);h(`No parser for atom path=${e.atomPath}, payload-len=${t}, ignoring atom`),await this.tokenizer.ignore(t)}getTrackDescription(){const e=[...this.tracks.values()];return e[e.length-1]}calculateBitRate(){this.audioLengthInBytes&&this.metadata.format.duration&&this.metadata.setFormat("bitrate",8*this.audioLengthInBytes/this.metadata.format.duration)}async addTag(e,t){await this.metadata.addTag(Te,e,t)}addWarning(e){h(`Warning: ${e}`),this.metadata.addWarning(e)}parseMetadataItemData(e){let t=e.header.name;return e.readAtoms(this.tokenizer,async(a,s)=>{const n=a.getPayloadLength(s);switch(a.header.name){case"data":return this.parseValueAtom(t,a);case"name":case"mean":case"rate":{const r=await this.tokenizer.readToken(new se(n));t+=`:${r.name}`;break}default:{const r=await this.tokenizer.readToken(new f(n));this.addWarning(`Unsupported meta-item: ${t}[${a.header.name}] => value=${J(r)} ascii=${X(r,"ascii")}`)}}},e.getPayloadLength(0))}async parseValueAtom(e,t){const a=await this.tokenizer.readToken(new ae(Number(t.header.length)-A.len));if(a.type.set!==0)throw new z(`Unsupported type-set != 0: ${a.type.set}`);switch(a.type.type){case 0:switch(e){case"trkn":case"disk":{const s=p.get(a.value,3),n=p.get(a.value,5);await this.addTag(e,`${s}/${n}`);break}case"gnre":{const s=p.get(a.value,1),n=Y[s-1];await this.addTag(e,n);break}case"rate":{const s=new TextDecoder("ascii").decode(a.value);await this.addTag(e,s);break}default:h(`unknown proprietary value type for: ${t.atomPath}`)}break;case 1:case 18:await this.addTag(e,new TextDecoder("utf-8").decode(a.value));break;case 13:if(this.options.skipCovers)break;await this.addTag(e,{format:"image/jpeg",data:Uint8Array.from(a.value)});break;case 14:if(this.options.skipCovers)break;await this.addTag(e,{format:"image/png",data:Uint8Array.from(a.value)});break;case 21:await this.addTag(e,I.read_BE_Integer(a.value,!0));break;case 22:await this.addTag(e,I.read_BE_Integer(a.value,!1));break;case 65:await this.addTag(e,p.get(a.value,0));break;case 66:await this.addTag(e,u.get(a.value,0));break;case 67:await this.addTag(e,o.get(a.value,0));break;default:this.addWarning(`atom key=${e}, has unknown well-known-type (data-type): ${a.type.type}`)}}async parseTrackBox(e){const t={media:{},fragments:[]};await e.readAtoms(this.tokenizer,async(a,s)=>{const n=a.getPayloadLength(s);switch(a.header.name){case"chap":{const r=await this.tokenizer.readToken(new ke(s));t.chapterList=r;break}case"tkhd":t.header=await this.tokenizer.readToken(new ne(n));break;case"hdlr":switch(t.handler=await this.tokenizer.readToken(new ue(n)),t.handler.handlerType){case"audi":h("Contains audio track"),this.hasAudioTrack=!0;break;case"vide":h("Contains video track"),this.hasVideoTrack=!0;break}break;case"mdhd":{const r=await this.tokenizer.readToken(new ee(n));t.media.header=r;break}case"stco":{const r=await this.tokenizer.readToken(new he(n));t.chunkOffsetTable=r.entries;break}case"stsc":{const r=await this.tokenizer.readToken(new le(n));t.sampleToChunkTable=r.entries;break}case"stsd":{const r=await this.tokenizer.readToken(new E(n));t.soundSampleDescription=r.table.map(c=>this.parseSoundSampleDescription(c));break}case"stts":{const r=await this.tokenizer.readToken(new ce(n));t.timeToSampleTable=r.entries;break}case"stsz":{const r=await this.tokenizer.readToken(new L(n));t.sampleSize=r.sampleSize,t.sampleSizeTable=r.entries;break}case"dinf":case"vmhd":case"smhd":h(`Ignoring: ${a.header.name}`),await this.tokenizer.ignore(n);break;default:h(`Unexpected track box: ${a.header.name}`),await this.tokenizer.ignore(n)}},e.getPayloadLength(0)),this.tracks.set(t.header.trackId,t)}parseTrackFragmentBox(e){let t;return e.readAtoms(this.tokenizer,async(a,s)=>{const n=a.getPayloadLength(s);switch(a.header.name){case"tfhd":{const r=new ge(a.getPayloadLength(s));t=await this.tokenizer.readToken(r);break}case"tfdt":await this.tokenizer.ignore(n);break;case"trun":{const r=new pe(n),c=await this.tokenizer.readToken(r);t&&this.tracks.get(t.trackId)?.fragments.push({header:t,trackRun:c});break}default:h(`Unexpected box: ${a.header.name}`),await this.tokenizer.ignore(n)}},e.getPayloadLength(0))}parseSoundSampleDescription(e){const t={dataFormat:e.dataFormat,dataReferenceIndex:e.dataReferenceIndex};let a=0;if(e.description){const s=B.get(e.description,a);a+=B.len,s.version===0||s.version===1?t.description=ie.get(e.description,a):h(`Warning: sound-sample-description ${s} not implemented`)}return t}async parseChapterTrack(e,t,a){if(!e.sampleSize&&e.chunkOffsetTable.length!==e.sampleSizeTable.length)throw new Error("Expected equal chunk-offset-table & sample-size-table length.");const s=[];for(let n=0;n<e.chunkOffsetTable.length&&a>0;++n){const r=e.timeToSampleTable.slice(0,n).reduce((j,G)=>j+G.duration,0),d=e.chunkOffsetTable[n]-this.tokenizer.position,l=e.sampleSize>0?e.sampleSize:e.sampleSizeTable[n];if(a-=d+l,a<0)throw new z("Chapter chunk exceeding token length");await this.tokenizer.ignore(d);const S=await this.tokenizer.readToken(new me(l));h(`Chapter ${n+1}: ${S}`);const y={title:S,timeScale:e.media.header?e.media.header.timeScale:0,start:r,sampleOffset:this.findSampleOffset(t,this.tokenizer.position)};h(`Chapter title=${y.title}, offset=${y.sampleOffset}/${t.header.duration}`),s.push(y)}this.metadata.setFormat("chapters",s),await this.tokenizer.ignore(a)}findSampleOffset(e,t){let a=0;for(;a<e.chunkOffsetTable.length&&e.chunkOffsetTable[a]<t;)++a;return this.getChunkDuration(a+1,e)}getChunkDuration(e,t){let a=0,s=t.timeToSampleTable[a].count,n=t.timeToSampleTable[a].duration,r=1,c=this.getSamplesPerChunk(r,t.sampleToChunkTable),d=0;for(;r<e;){const l=Math.min(s,c);d+=l*n,s-=l,c-=l,c===0?(++r,c=this.getSamplesPerChunk(r,t.sampleToChunkTable)):(++a,s=t.timeToSampleTable[a].count,n=t.timeToSampleTable[a].duration)}return d}getSamplesPerChunk(e,t){for(let a=0;a<t.length-1;++a)if(e>=t[a].firstChunk&&e<t[a+1].firstChunk)return t[a].samplesPerChunk;return t[t.length-1].samplesPerChunk}}export{I as MP4Parser};
